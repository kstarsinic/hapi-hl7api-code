/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * EventTypeForm.java
 *
 * Created on 3-Nov-2009, 8:22:14 AM
 */
package ca.uhn.hunit.swing.ui.event;

import ca.uhn.hunit.event.AbstractEvent;
import ca.uhn.hunit.l10n.Strings;
import ca.uhn.hunit.swing.controller.ctx.TestEditorController;
import ca.uhn.hunit.swing.ui.tests.EventListTableCellRenderer;
import ca.uhn.hunit.test.TestBatteryImpl;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;

/**
 *
 * @author James
 */
public class EventTypeForm extends AbstractEventEditorForm<AbstractEvent> {

    private static final long serialVersionUID = 1L;
    private TestEditorController myController;
    private AbstractEvent myEvent;

    /** Creates new form EventTypeForm */
    public EventTypeForm() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        myEventTypeComboBox = new javax.swing.JComboBox();
        myEventTypeDescriptionLabel = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(460, 98));

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("ca/uhn/hunit/l10n/UiStrings"); // NOI18N
        jLabel1.setText(bundle.getString("eventeditor.event_type")); // NOI18N

        myEventTypeComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        myEventTypeDescriptionLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        myEventTypeDescriptionLabel.setText("jLabel2");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(myEventTypeComboBox, 0, 312, Short.MAX_VALUE))
            .addComponent(myEventTypeDescriptionLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 460, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(myEventTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(myEventTypeDescriptionLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 72, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JComboBox myEventTypeComboBox;
    private javax.swing.JLabel myEventTypeDescriptionLabel;
    // End of variables declaration//GEN-END:variables

    /**
     * {@inheritDoc }
     */
    @Override
    public void setController(TestEditorController theController, TestBatteryImpl theBattery, AbstractEvent theEvent) {
        myController = theController;
        myEvent = theEvent;

        myEventTypeDescriptionLabel.setText(Strings.getMessage("event.description." + theEvent.getClass().getName()));

        myEventTypeComboBox.setRenderer(new EventTypeComboboxRenderer());
        myEventTypeComboBox.setModel(new EventTypeComboboxModel(theEvent));
        myEventTypeComboBox.addItemListener(new MyEventTypeItemListener());
    }

    private class MyEventTypeItemListener implements ItemListener {

        @Override
        public void itemStateChanged(ItemEvent e) {
            Class<? extends AbstractEvent> clazz = (Class<? extends AbstractEvent>) e.getItemSelectable().getSelectedObjects()[0];
        }

    }
}
