<?xml version="1.0" encoding="UTF-8"?>
<document xmlns="http://maven.apache.org/XDOC/2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/XDOC/2.0 http://maven.apache.org/xsd/xdoc-2.0.xsd">

	<properties>
		<title>HL7 over HTTP</title>
		<author email="jamesagnew@users.sourceforge.net">James Agnew</author>
	</properties>

	<body>

		<section name="Specification">

			<p>
				HL7 over HTTP is an initiative to provide a standardized
				transport mechanism to send HL7 v2 messages over a network
				using the HTTP protocol.
			</p>

			<subsection name="Intent">
				
				<p>
					HL7 over HTTP is an alternative to the traditional
					Minimal Lower Layer Protocol (MLLP), but provides a number
					of key improvements:
				</p>
				<ul>
					<li>
						HTTP is widely used for a variety of purposes, and is
						well understood by application developers, network engineers, etc.
					</li>
					<li>
						HTTP allows for authentication (username/password) and character
						set encoding to be specified in a standardized way, without having to
						embed this information in the message itself.
					</li>
					
				</ul>

				<p>
					HL7 over HTTP uses the standard HTTP 1.1 protocol as a mechanism to transfer
					a raw HL7 message using either ER7 or XML encoding to a destination, and then
					to receive a response to that message. A standard interaction is shown below.  
				</p>

				<img src="images/HoH_Trace_Normal.png"/>
				
			</subsection>

			<subsection name="Transport Messages">
			
				<p>
					Every interaction consists of a <b>request message</b> and a <b>response message</b>.
					In a normal message exchange, the request message consists of a standard HTTP
					POST, with the following semantics:
				</p>
			
				<h4>Addressing</h4>
				
				<p>
					The <b>request message</b> must include a universal resource identifier (URI), per the
					HTTP specification. This URI should indicate
					the appropriate "interface" for the message. This is analogous to the port number in 
					a standard 
					<dfn title="Minimal Lower Layer Protocol">MLLP</dfn> 
					configuration. 
				</p>
				<p>
					For example, a receiving laboratory information system application might open an 
					HTTP server on port 1234 which is capable of receiving several types of data. The 
					sending system could then address ADT data to the receiving system's ADT queue using 
					the following POST request<br/>
					<code>&nbsp;&nbsp;&nbsp;&nbsp;POST /Lab_Info_System/ADT HTTP/1.1</code>
				</p>
				<p>
					An implementing receiving system may also choose to use a separate port for each
					interface, as is the norm for MLLP interfaces. This is acceptable and will work,
					but is not desirable as it is not common practise in HTTP applications. 
				</p>
			
				<h4>Content Length</h4>
				
				<p>
					The <b>request message</b> and the <b>response message</b> should include a
					<code>Content-Length</code> header, which indicates the number of bytes in
					the HL7 message itself. Per the HTTP specification, this number excludes any
					bytes found within the HTTP headers and the two carriage returns which follow 
					them, but includes any further whitespace which will be counted as a part of
					the message body. Depending on the character set encoding, the content length 
					may exceed the number of characters as some characters will be represented as
					multi-byte sequences (e.g. in UTF-8). An example follows, which indicates that the message contents
					consist of 2553 bytes.<br/>
					<code>&nbsp;&nbsp;&nbsp;&nbsp;Content-Length: 2553</code>  
				</p>

				<h4>Content Type and Character Set</h4>
				
				<p>
					The <b>request message</b> and the <b>response message</b> must include a
					<code>Content-Type</code> header, which indicates the type of data being 
					transferred. The following MIME types apply:
					<ul>
						<li>
							If the message is an ER7 (vertical bar) encoded message, the
							content type should be:<br/>
							<code>&nbsp;&nbsp;&nbsp;&nbsp;application/hl7-v2</code>
						</li>
						<li>
							If the message is an XML encoded message, the
							content type should be:<br/>
							<code>&nbsp;&nbsp;&nbsp;&nbsp;application/hl7-v2+xml</code>
						</li>
						<li>
							If the <b>response message</b> content is not an HL7 message
							(for instance because the server is malfunctioning and returning a 500 status or the URI being 
							addressed is unknown and the server is returning a 404 status),
							the content may be another type, such as<br/>
							<code>&nbsp;&nbsp;&nbsp;&nbsp;text/html</code> or <code>text/plain</code>
						</li>
					</ul>
					In addition, both the <b>request message</b> and the <b>response message</b> should
					include a charset definition which indicates which character encoding is being used
					for the message body. Note that the HL7 specification allows the character set to be
					specified in MSH-18. When a message is received using HL7 over HTTP, this value must
					be ignored. When a message is sent using HL7 over HTTP, the sending application may 
					choose to use the value in MSH-18 to inform the choice of charset, but it is not
					obligated to do so.
				</p>
				<p>
					An example follows which shows an ER7 encoded message being
					transmitted using a character encoding of ISO-8859-4.
					<br/>
					<code>&nbsp;&nbsp;&nbsp;&nbsp;Content-Type: application/hl7-v2; charset=ISO-8859-4</code>  
				</p>
			
			</subsection>
			
		</section>

	</body>

</document>
